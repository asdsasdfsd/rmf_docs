{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u5982\u4f55\u642d\u5efa\u548c\u90e8\u7f72Mir\u76f8\u5173\u7684rmf\u96c6\u7fa4","text":""},{"location":"#rmf","title":"\u5982\u4f55\u642d\u5efa\u4e00\u4e2a\u672c\u5730\u7684rmf\u96c6\u7fa4","text":""},{"location":"#1ubantu2204","title":"1.\u521b\u5efa\u865a\u62df\u673a(Ubantu\u7248\u672c\u662f22.04)","text":"<p>\u6211\u4f7f\u7528\u7684\u662f<code>Vagrant</code>\u7684\u865a\u62df\u673a\u7ba1\u7406\u5de5\u5177\u548c<code>VirtualBox</code>\u7684\u865a\u62df\u673a\u6784\u5efa\u5de5\u5177</p> <p>1.1\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939,\u6bd4\u5982<code>my-vagrant-ubuntu2204</code>,\u8fdb\u5165\u6587\u4ef6\u5939</p> <p>1.2\u5728\u547d\u4ee4\u884c\u4f7f\u7528<code>vagrant init</code>\u521d\u59cb\u5316<code>Vagrant</code>\u3002\u8fd9\u4e2a\u547d\u4ee4\u4f1a\u521b\u5efa\u4e00\u4e2a\u9ed8\u8ba4\u7684<code>Vagrantfile</code>,<code>Vagrant</code>\u4f1a\u6839\u636e\u8fd9\u4e2a<code>Vagrantfile</code>\u4e2d\u5b9a\u4e49\u7684\u914d\u7f6e\u6765\u6784\u5efa\u865a\u62df\u673a\uff0c\u9700\u8981\u4e0b\u8f7d\u6587\u6863Vagrantfile\u6587\u4ef6\u6765\u66ff\u6362,\u540c\u65f6\u8981\u4e0b\u8f7d\u811a\u672c\u6587\u4ef6bootstrap.sh ,\u8fd9\u4e2a\u6587\u4ef6\u5e94\u8be5\u662f\u4e3a\u4e86\u767b\u5f55\u684c\u9762\u7248ubantu\u65f6\u53ef\u4ee5\u4f7f\u7528\u5bc6\u7801</p> <p>1.3\u7528vagrant up\u542f\u52a8\u865a\u62df\u673a\u548cvagrant ssh\u94fe\u63a5\u865a\u62df\u673a</p>"},{"location":"#2ros-humble-desktop","title":"2.\u6309\u7167ros-humble-desktop","text":"<p>1.1\u5b89\u88c5Ubantu\u684c\u9762\u7248 <pre><code>sudo apt update\nsudo apt install ubuntu-desktop -y\nsudo reboot\n</code></pre> \u4e2d\u95f4\u51fa\u73b0\u7684package configuration\u76f4\u63a5TAB\uff0c\u7136\u540e\u9009OK\u5c31\u53ef\u4ee5\u4e86</p> <p>\u5b89\u88c5\u5b8c\u4ee5\u540e\u53ef\u4ee5\u7528VBox\u6765\u767b\u5f55\u684c\u9762\u7248\uff0c\u5bc6\u7801\u662f123456wk 1.2\u5b89\u88c5ROS2\u684c\u9762\u7248</p> <p>\u8c03\u6574\u672c\u5730\u7684\u7f16\u7801\u548c\u8bed\u8a00 <pre><code>locale  # check for UTF-8\n\nsudo apt update &amp;&amp; sudo apt install locales\nsudo locale-gen en_US en_US.UTF-8\nsudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nexport LANG=en_US.UTF-8\n\nlocale  # verify settings\n</code></pre> \u6700\u540e\u4e00\u884clocale\u4f1a\u5728\u547d\u4ee4\u884c\u8f93\u51fa\u4e0b\u9762\u7684\u6d88\u606f <pre><code>vagrant@ubuntu2204-rmf:~$ locale\nLANG=en_US.UTF-8\nLANGUAGE=\nLC_CTYPE=\"en_US.UTF-8\"\nLC_NUMERIC=\"en_US.UTF-8\"\nLC_TIME=\"en_US.UTF-8\"\nLC_COLLATE=\"en_US.UTF-8\"\nLC_MONETARY=\"en_US.UTF-8\"\nLC_MESSAGES=\"en_US.UTF-8\"\nLC_PAPER=\"en_US.UTF-8\"\nLC_NAME=\"en_US.UTF-8\"\nLC_ADDRESS=\"en_US.UTF-8\"\nLC_TELEPHONE=\"en_US.UTF-8\"\nLC_MEASUREMENT=\"en_US.UTF-8\"\nLC_IDENTIFICATION=\"en_US.UTF-8\"\nLC_ALL=\n</code></pre> \u5b89\u88c5\u4e00\u4e9b\u53ef\u80fd\u9700\u8981\u7684\u4f9d\u8d56 <pre><code>sudo apt install software-properties-common\nsudo add-apt-repository universe\n</code></pre> \u5b89\u88c5ROS\u4ed3\u5e93\u5bc6\u94a5\u5e76\u4e14\u5c06\u5305\u5730\u5740\u6dfb\u52a0\u5230apt\u6e90\u5bf9\u5e94\u7684\u6587\u4ef6\u5939 <pre><code>sudo apt update &amp;&amp; sudo apt install curl -y\nsudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg\n\necho \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\n</code></pre> \u5b89\u88c5ROS2\u684c\u9762\u7248 <pre><code>sudo apt update\nsudo apt upgrade -y\nsudo apt install ros-humble-desktop -y\n</code></pre></p>"},{"location":"#3openrmf","title":"3.\u5b89\u88c5openrmf\u9700\u8981\u7684\u76f8\u5173\u4ed3\u5e93","text":"<p>\u5c06ros2\u76f8\u5173\u7684\u5305\u5728\u6bcf\u6b21\u542f\u52a8\u547d\u4ee4\u884c\u5de5\u5177\u7684\u65f6\u5019\u90fd\u81ea\u52a8\u5b89\u88c5\u5230\u73af\u5883\u53d8\u91cf\u91cc\u9762 <pre><code>source /opt/ros/humble/setup.bash\necho \"source /opt/ros/humble/setup.bash\"&gt;&gt;~/.bashrc\n</code></pre> Install all non-ROS dependencies of Open-RMF packages <pre><code>sudo apt update &amp;&amp; sudo apt install ros-dev-tools -y\n</code></pre> (rosdep helps install dependencies for ROS packages across various distros and will be installed along with ros-dev-tools. However, it is important to update it.) <pre><code>sudo rosdep init # run if first time using rosdep.\nrosdep update\n</code></pre> \u5b89\u88c5gazebo\u76f8\u5173\u7684\u5305\u5230apt\u6e90 <pre><code>sudo sh -c 'echo \"deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main\" &gt; /etc/apt/sources.list.d/gazebo-stable.list'\nwget https://packages.osrfoundation.org/gazebo.key -O - | sudo apt-key add -\n</code></pre> \u5b89\u88c5python\u76f8\u5173\u7684\u5305 <pre><code>sudo apt update\nsudo apt install python3-pip -y\npython3 -m pip install flask-socketio fastapi uvicorn\n</code></pre> Update colcon mixin if you have not done so previously.(colcon\u662f\u6784\u5efaros2\u5de5\u4f5c\u7a7a\u95f4\u7684\u5de5\u5177) <pre><code>colcon mixin add default https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml\ncolcon mixin update default\n</code></pre> \u521b\u5efaROS2\u5bf9\u5e94\u7684\u5de5\u4f5c\u7a7a\u95f4\uff0cmultistop.repos\u4e0b\u8f7d <pre><code>cd Documents\nmkdir -p rmf_ws/src\ncd rmf_ws\n\nnano multistop.repos #\u590d\u5236\u7c98\u8d34\uff0c\u5199\u5165multistop\u4e2d\u7684\u5185\u5bb9\nvcs import src &lt; multistop.repos\n</code></pre> \u5b89\u88c5\u4f9d\u8d56\u9879 <pre><code>cd rmf_ws\nrosdep install --from-paths src --ignore-src --rosdistro humble -y --skip-keys=gz_sim_vendor\n</code></pre> \u5b89\u88c5\u548c\u66f4\u65b0\u7f16\u8f91\u5668\u914d\u7f6e <pre><code>sudo apt update\nsudo apt install clang clang-tools lldb lld libstdc++-12-dev -y\n</code></pre> \u6784\u5efa<code>open-rmf</code> <pre><code>export CXX=clang++\nexport CC=clang\ncolcon build --mixin release lld\n</code></pre> \u5c06<code>openrmf</code>\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u52a0\u5165\u7ec8\u7aef\u7684\u542f\u52a8\u811a\u672c\u91cc\u9762 <pre><code>echo \"source ~/Documents/rmf_ws/install/setup.bash\"&gt;&gt;~/.bashrc\nsource ~/.bashrc\n</code></pre> \u5b89\u88c5<code>dds</code>\u901a\u4fe1\u7684\u5de5\u5177 <pre><code>sudo apt update\nsudo apt install ros-humble-rmw-cyclonedds-cpp\nexport RMW_IMPLEMENTATION=rmw_cyclonedds_cpp\n</code></pre> \u8fd0\u884c<code>openrmf</code>\u7684<code>launch</code>\u6587\u4ef6\u6765\u68c0\u67e5\u662f\u5426\u6210\u529f\u7f16\u8bd1(\u8fd9\u4e00\u6b65\u8981\u5728<code>ubantu</code>\u684c\u9762\u7248\u91cc\u9762\u8fdb\u884c) <pre><code>ros2 launch rmf_demos_gz office.launch.xml\n</code></pre></p>"},{"location":"#4rmf_web","title":"4.\u5b89\u88c5rmf_web\u76f8\u5173\u4ed3\u5e93","text":"<p>\u5b89\u88c5nvm <pre><code>sudo apt update &amp;&amp; sudo apt install curl\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] &amp;&amp; \\. \"$NVM_DIR/nvm.sh\"\n[ -s \"$NVM_DIR/bash_completion\" ] &amp;&amp; \\. \"$NVM_DIR/bash_completion\"\nnvm install 20\n</code></pre> \u5b89\u88c5<code>pnpm</code>\u548c<code>nodejs</code> <pre><code>curl -fsSL https://get.pnpm.io/install.sh | bash -\nsource /home/vagrant/.bashrc\npnpm env use --global 20\n</code></pre> \u5b89\u88c5<code>pipenv</code>\u5c31<code>python3-venv</code> <pre><code>pip3 install pipenv\nsudo apt install python3-venv\n</code></pre> \u4e0b\u8f7drmf_web\u7684\u4ed3\u5e93,\u5207\u6362\u5230humble\u5206\u652f <pre><code>cd ~/Documents\ngit clone https://github.com/open-rmf/rmf-web.git\ncd rmf-web\ngit checkout -b humble origin/humble\n</code></pre> \u5b89\u88c5rmf_web\u7528\u5230\u7684\u4f9d\u8d56 <pre><code>pnpm install\n</code></pre> \u9a8c\u8bc1\u662f\u5426\u6210\u529f\u5b89\u88c5\u5305\u548c\u4f9d\u8d56(\u5728\u865a\u62df\u673a\u7684\u6d4f\u89c8\u5668\u4e2d\u770b\u770b\u662f\u5426\u53ef\u4ee5\u8fdb\u5165localhost:3000\u53d1\u5e03\u4efb\u52a1) <pre><code>cd packages/dashboard\npnpm start\nros2 launch rmf_demos_gz office.launch.xml #\u8fd9\u4e2a\u8981\u5728ubuntu\u684c\u9762\u7248\u8fd0\u884c\n</code></pre></p>"},{"location":"#5rmf-adapter-mirrmf","title":"5.\u4e0b\u8f7drmf-adapter-mir\u76f8\u5173\u7684\u6587\u4ef6\uff08\u8be6\u7ec6\u89e3\u6790\u5728\u5bfc\u822a\u680frmf\u9875\u4e2d\uff09","text":"<p>\u4e0b\u8f7d\u4ed3\u5e93\u5e76\u7f16\u8bd1 <pre><code># Create the MiR workspace and clone the repository\nmkdir -p mir_ws/src\ncd mir_ws/src\ngit clone https://github.com/osrf/fleet_adapter_mir\n\n# Source the Open-RMF underlay workspace and build\ncd ~/Documents/mir_ws/mir_ws\ncolcon build\n#\u5982\u679c\u9047\u5230\u95ee\u9898\u5c31\u7528pip install setuptools==67.0.0\u964d\u4f4esetuptools\u7248\u672c\uff0c\u5e76\u4e14\u5220\u9664fleet_adapter_mirfm\u548cmir_fleet_client\u6587\u4ef6\u5939(\u8fd9\u4e2a\u4e5f\u7528\u5b89\u88c5\u9700\u8981\u7684python\u5305\u89e3\u51b3)\nsource ~/Documents/rmf_ws/mir_ws/install/setup.bash\necho \"source ~/Documents/rmf_ws/mir_ws/install/setup.bash\" &gt;&gt; ~/.bashrc\n</code></pre> \u8fd9\u4e2a\u8981\u4f7f\u7528\u8981\u6539\u4e00\u4e9b\u53c2\u6570</p> <p>configs/mir_config.yaml\u91cc\u9762\u8981\u5c06<code>base_url</code>\u5bf9\u5e94\u7684\u503c\u6539\u4e3a <code>'http://mir.com/api/v2.0.0/'</code> <code>password</code>\u5bf9\u5e94\u7684\u503c\u8981\u6539\u4e3amir\u673a\u5668\u4eba\u7684api_token <code>'\u56e0\u4e3a\u8fd9\u4e2a\u6bd4\u8f83\u79c1\u5bc6\u6700\u597d\u5230\u673a\u5668\u4eba\u91cc\u9762\u770b\u4e00\u4e9b'</code> configs/nav_graph.yaml\u91cc\u9762\u7684\u6587\u4ef6\u8981\u66ff\u6362\u4e3anav_graph.yaml</p> <p>mir\u673a\u5668\u4eba\u91cc\u9762\u8981\u521b\u5efa\u4e24\u4e2a<code>mission</code>,\u5206\u522b\u662f<code>dock_to_charger</code>\u548c<code>rmf_default_move_mission</code>\u3002\u5176\u4e2d<code>rmf_default_move_mission</code>\u4efb\u52a1\u4e2d\u8981\u52a0\u4e00\u4e2a<code>action</code>,<code>action</code>\u4e09\u4e2a\u53c2\u6570\u7684\u540d\u5b57\u5206\u522b\u662f'x','y','yaw'</p>"},{"location":"#6launchrmf-adapter-mir","title":"6.\u6211\u81ea\u5df1\u5199\u4e86\u4e00\u4e2alaunch\u6587\u4ef6(\u8fd9\u4e2a\u6587\u4ef6\u662f\u4e3a\u4e86\u4e0d\u8fd0\u884crmf-adapter-mir\u5bf9\u5e94\u7684\u5305\u4ee5\u53ca\u4f7f\u7528\u529e\u516c\u5ba4\u7684\u865a\u62df\u73af\u5883\uff09","text":"<p>\u4e0b\u8f7d\u6211\u7684launch.xml\u6587\u4ef6 <pre><code>cd Documents\ngit clone https://github.com/asdsasdfsd/launch.git\ncd launch\ncolcon build\n</code></pre> \u8fd0\u884claunch\u6587\u4ef6 <pre><code>source ~/Documents/launch/install/setup.bash\necho \"source ~/Documents/launch/install/setup.bash\" &gt;&gt; ~/.bashrc\nros2 launch test office.launch.xml #\u8fd9\u4e2a\u8981\u5728ubantu\u684c\u9762\u7248\u91cc\u9762\u8fd0\u884c\n</code></pre></p>"},{"location":"#7","title":"7.\u542f\u52a8\u6240\u6709\u9700\u8981\u7684\u6587\u4ef6","text":"<pre><code>ros2 launch test office.launch.xml\nros2 run fleet_adapter_mir fleet_adapter_mir -c /home/vagrant/Documents/rmf_ws/mir_ws/src/fleet_adapter_mir/configs/mir_config.yaml -n /home/vagrant/Documents/launch/src/test/configs/0.yaml \n#\u540e\u9762\u7684\u53c2\u6570\u662f\u4e24\u4e2a\u914d\u7f6e\u6587\u4ef6\ncd packages/dashboard\npnpm start\n</code></pre>"},{"location":"api/","title":"\u5173\u4e8ermf-web-api","text":""},{"location":"dashboard/","title":"\u5173\u4e8ermf_dashboard","text":""},{"location":"map/","title":"\u5982\u4f55\u5229\u7528traffic_editer\u548crmf_traffic_editor","text":""},{"location":"map/#traffic_editor","title":"traffic_editor\u7f16\u8f91\u5730\u56fe","text":""},{"location":"map/#rmf_traffic_editortraffic_editor3d","title":"rmf_traffic_editor\u5229\u7528traffic_editor\u751f\u6210\u7684\u6587\u4ef6\u751f\u6210\u8f68\u8ff9\u6587\u4ef6\u548c3d\u6a21\u62df","text":""},{"location":"rmf/","title":"1. The Main Packages Used to Build RMF","text":""},{"location":"rmf/#11-rmf","title":"1.1 rmf","text":"<p> \u4e0b\u8f7d \u8fd9\u4e2a\u56fe\u7247\u91cc\u9762\u662fopenrmf\u91cc\u9762\u7684office.launch.xml\u6587\u4ef6\u91cc\u9762\u5bf9\u5e94\u7684\u542f\u52a8\u8282\u70b9\u548c\u4f5c\u7528  \u4e0b\u8f7d \u8fd9\u4e2a\u662frmf\u96c6\u7fa4\u4e2d\u6240\u7528\u8282\u70b9\u548c\u6d88\u606f\u7684\u6982\u89c8</p>"},{"location":"rmf/#12-rmf_adapter_mir","title":"1.2 rmf_adapter_mir","text":""},{"location":"rmf/#121-nodes","title":"1.2.1 Nodes","text":""},{"location":"rmf/#a-testdeliveryadapter","title":"a. TestDeliveryAdapter","text":"<p>\u8fd9\u4e2a\u8282\u70b9\u662f\u5728main\u51fd\u6570\u7684create_fleet(config,nav_graph_path, mock=mock)\u65b9\u6cd5\u4e2d\u521b\u5efa\u7684\uff0c\u5bf9\u5e94\u7684\u8bed\u53e5\u5982\u4e0b\uff0c\u8fd9\u4e2a\u8282\u70b9\u662f\u6700\u4e3b\u8981\u7684\u8282\u70b9\uff0c\u5728fleet_adapter_mir\u4e2drmf\u548cmir\u4ea4\u6d41\u7684\u6865\u6881\uff0c\u4e3b\u8981\u662f\u5728MirCommandHandle.py\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u5b9a\u65f6\u5668<code>self.state_update_timer = self.node.create_timer</code>(170\u884c)\uff0c\u4e0d\u65ad\u8c03\u7528\u4e24\u4e2a\u65b9\u6cd5\u6765\u5b9e\u73b0\u673a\u5668\u4eba\u7684\u79fb\u52a8</p> <p>In file fleet_adapter_mir.py of package fleet_adapter_mir<pre><code># RMF_CORE Fleet Adapter: Manages delivery or loop requests\nif mock:\n    adapter = adpt.MockAdapter(config['node_names']['rmf_fleet_adapter'])\nelse:\n    adapter = adpt.Adapter.make(config['node_names']['rmf_fleet_adapter'])\n</code></pre> \u5177\u4f53\u7684\u5b9e\u73b0\u5728rmf_ros2\u4ed3\u5e93\u4e2d\u7684rmf_fleet_adapter_python\u4e2d\uff0c\u540c\u65f6rmf_fleet_adapter_python\u4e2d\u662f\u7528pybind11\u5c06rmf_fleet_adapter\u4e2d\u7684C++\u4ee3\u7801\u8f6c\u6362\u4e3a\u4e86\u4e00\u4e2a\u53ebrmf_adapter\u7684python\u52a8\u6001\u5e93\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5\u5728python\u6587\u4ef6\u4e2d\u7528import rmf_adapter\u6765\u8c03\u7528\u529f\u80fd</p>"},{"location":"rmf/#b-rmf_mir_fleet_command_handler","title":"b. rmf_mir_fleet_command_handler","text":"<p>\u5df2\u77e5ros2\u8c03\u7528\u5305\u65f6\uff0c\u4f1a\u6839\u636e<code>setup.py</code>\u91cc\u9762\u7684<code>entry_points</code>\u6765\u6267\u884c\u5bf9\u5e94\u7684main\u51fd\u6570  main\u51fd\u6570\u53ea\u662f\u58f0\u660e\u4e86\u4e00\u4e2a\u53ebrmf_mir_fleet_command_handler\u7684node\u5e76\u4e14\u6dfb\u52a0\u8fd0\u884c\u4e86\u4e00\u4e0b main\u4e2d\u7684\u76f8\u5173\u8bed\u53e5<pre><code>def main(argv=sys.argv):\n  cmd_node = rclpy.node.Node(config['node_names']['robot_command_handle'])\n  #The value of config['node_names']['robot_command_handle' is rmf_mir_fleet_command_handler\n  rclpy_executor.add_node(cmd_node)\n  cmd_node.destroy_node()\n</code></pre></p> <p>In file fleet_adapter_mir.py of package fleet_adapter_mir<pre><code>handle_data = {\n    'fleet_handle': fleet,\n    'fleet_name': fleet_name,\n    'adapter': adapter,\n    'node': cmd_node, #this is relative to node rmf_mir_fleet_command_handler\n    'graph': nav_graph,\n    'robot_traits': robot_traits,\n    'transforms': transforms\n}\n</code></pre> python\u4e2d\u53c2\u6570\u4f20\u9012\u9ed8\u8ba4\u662f\u4f20\u9012\u5f15\u7528\uff0c\u6240\u4ee5node\u7684\u529f\u80fd\u4f1a\u53d7\u5230MirCommandHandle\u7c7b\u7684\u5f71\u54cd,\u5177\u4f53\u8981\u4e86\u89e3<code>MirCommandHandle.py</code>\u4e2d\u7684\u4ee3\u7801</p> In file fleet_adapter_mir.py of package fleet_adapter_mir<pre><code>robot = MiRCommandHandle(\n        name=robot_name,\n        node=handle_data['node'],\n        rmf_graph=handle_data['graph'],\n        robot_traits=handle_data['robot_traits'],\n        robot_state_update_frequency=rmf_config.get('robot_state_update_frequency', 1),\n        dry_run=dry_run\n)\n</code></pre>"},{"location":"rmf/#c-rmf_mir_fleet_state_publisher","title":"c. rmf_mir_fleet_state_publisher","text":"<p>\u8fd9\u4e2a\u5728main\u51fd\u6570\u91cc\u9762\u4e3b\u8981\u662f\u58f0\u660e\u4e86\u4e00\u4e2a\u53eb<code>rmf_mir_fleet_state_publisher</code>\u7684<code>node</code>,\u5b9a\u4e49\u4e86\u4f1a\u53d1\u5e03<code>FleetState</code>\u6d88\u606f\u7684\u53d1\u5e03\u8005<code>fleet_state_pub</code>\uff0c\u7528\u5b9a\u65f6\u5668<code>fleet_state_timer</code>\u5b9a\u65f6\u8c03\u7528\u53d1\u5e03\u8005\u7684\u53d1\u5e03\u65b9\u6cd5<code>fleet_state_pub.publish(fleet_state)</code>\u6765\u53d1\u5e03<code>FleetState</code>\u6d88\u606f</p> In file fleet_adapter_mir.py of package fleet_adapter_mir<pre><code># INIT FLEET STATE PUB ====================================================\nif config['rmf_fleet']['publish_fleet_state']:# \u8fd9\u4e2a\u5728\u914d\u7f6e\u6587\u4ef6mir_config.yaml\u91cc\u9762value: Ture\n    fleet_state_node = rclpy.node.Node(config['node_names']['fleet_state_publisher'])\n    #The value of config['node_names']['fleet_state_publisher'] is rmf_mir_fleet_state_publisher\n    fleet_state_pub = fleet_state_node.create_publisher(\n        FleetState,\n        config['rmf_fleet']['fleet_state_topic'],\n        1\n    )\n    rclpy_executor.add_node(fleet_state_node)\n\n    def create_fleet_state_pub_fn(fleet_state_pub, fleet_name, robots):\n        def f():\n            fleet_state = FleetState()\n            fleet_state.name = fleet_name\n\n            for robot in robots.values():\n                fleet_state.robots.append(robot.robot_state)\n\n            fleet_state_pub.publish(fleet_state)\n        return f\n\n    fleet_state_timer = fleet_state_node.create_timer(\n        config['rmf_fleet']['fleet_state_publish_frequency'],\n        create_fleet_state_pub_fn(fleet_state_pub, fleet_name, robots)\n    )\n</code></pre>"},{"location":"ros/","title":"\u5173\u4e8eROS2\u7cfb\u7edf","text":""}]}